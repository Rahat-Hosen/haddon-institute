// Prisma generator
generator client {
  provider = "prisma-client-js"
}

// Prisma datasource for MySQL
datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id      String   @id @unique
  admin   Boolean  @default(false)
  courses Course[]
}

model Course {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  slug          String   @unique
  code          String // Course code name
  title         String
  overview      String // Long description
  description   String // Short description
  campus        String // Which campus is the course delivered on?
  format        String // How will the content be delivered?
  lectures      Json     @db.Json
  objectives    Json     @db.Json
  requiredTexts Json     @db.Json
  optionalTexts Json     @db.Json
  workload      String? // How much time will the student need to spend on the course per week
  workloadHours String? // How much time will the student need to spend on the course per week
  assessment    String? // How will the student be assessed?
  passingReq    String? // What are the mandatary requirements for the course?
  season        String?
  weeks         String? // How many weeks will the course run?
  startDate     DateTime
  endDate       DateTime
  categories    Json     @db.Json
  thumbnail     String?
  price         String
  lecturer      String?
  lecturerImage String?
  lecturerEmail String?
  admin         String?
  adminImage    String?
  adminEmail    String?
  coord         String?
  coordImage    String?
  coordEmail    String?
  video         String?
  users         User[]
  Lesson        Lesson[]
  published     Boolean  @default(false)
  capstone      Boolean  @default(false)
}

model Lesson {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  slug        String   @unique
  title       String
  description String
  video       String?
  blocks      Json[]
  length      String? // number of estimated hours/minutes for lesson
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    Int
  published   Boolean  @default(false)

  @@index([courseId])
}

model Newsletter {
  email      String   @id @unique
  createdAt  DateTime @default(now())
  subscribed Boolean  @default(true)
}

model Events {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  slug        String        @unique
  title       String
  description String
  published   Boolean       @default(false)
  EventSignup EventSignup[]
}

model EventSignup {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String
  email     String
  phone     String
  events    Events   @relation(fields: [eventId], references: [id])
  eventId   Int

  @@index([eventId])
}
